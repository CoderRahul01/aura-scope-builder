# pyproject.toml
[project]
name = "aura-backend"
version = "0.2.0" # Updated version reflecting Gemini integration
description = "A FastAPI backend to generate MVP scope documents using Google Gemini AI."
readme = "README.md"
requires-python = ">=3.9" # Specify a reasonable minimum Python version
license = { text = "MIT" } # Or your preferred license
authors = [
    { name = "Rahul Pandey", email = "jobinfo.rahul@gmail.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0", # For loading .env file if not using pydantic-settings' native support fully
    "google-generativeai>=0.5.0", # Key dependency for Gemini
    # "openai>=1.0.0",            # Commented out if fully removed
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
# Tells Hatch that the 'aura_backend' directory in the root IS the package
packages = ["aura-backend"]

[tool.pytest.ini_options] # Example for pytest configuration
# pythonpath = ["."]
# addopts = "-sv --cov=app --cov-report=term-missing"

# Add other tool configurations (ruff, mypy, etc.) as needed